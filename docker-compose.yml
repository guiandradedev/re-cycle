services:
    application-app:
        container_name: recycle-app
        build:
            context: .
            dockerfile: .docker/Dockerfile
            args:
                - APP_ENV=${APP_ENV}
        restart: unless-stopped
        ports:
            - "${FORWARD_APP_PORT:-80}:80"
        volumes:
            - ".:/app"
        networks:
            - src_default
        depends_on:
            - app-redis
            - app-mysql  
    app-redis:
        container_name: recycle-redis
        restart: unless-stopped
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - '.docker/local/data/redis:/data'
        networks:
            - src_default
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s

    app-mysql:
        container_name: recycle-mysql
        image: mysql:8.0
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        volumes:
            - '.docker/local/data/mysql:/var/lib/mysql'
        networks:
            - src_default

networks:
    src_default:
        driver: bridge